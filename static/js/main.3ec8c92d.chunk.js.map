{"version":3,"sources":["images/logo192.png","components/FormattedDate.js","components/Clock.js","components/LoginState.js","components/LoginStateHooks.js","components/LoginPropsOne.js","components/LoginPropsTwo.js","components/LoginLayout.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","FormattedDate","props","style","color","dateAsProps","Clock","state","time","sendDataToApp","parentCallback","this","countSecond","setInterval","updateTime","setState","Date","toLocaleTimeString","onClick","Component","LoginState","username","password","handleChangeUsername","event","target","value","handleChangePassword","handleSubmit","preventDefault","console","log","onSubmit","onChange","name","type","placeholder","LoginStateHooks","useState","setUsername","setPassword","required","LoginPropsOne","LoginPropsTwo","lu","LoginLayout","Grid","textAlign","height","verticalAlign","Column","maxWidth","Header","as","Image","src","logo","Form","size","Segment","raised","Input","fluid","icon","iconPosition","Button","Message","href","App","callbackFunction","childData","alert","dataStore","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ec8c92d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.a8d326d4.png\";","import React from \"react\";\n\nconst FormattedDate = (props) => <h4 style={{color: 'blue'}}>Сейчас: {props.dateAsProps}</h4>\n\nexport default FormattedDate","import React, {Component} from \"react\";\nimport FormattedDate from \"./FormattedDate\";\n\nclass Clock extends Component {\n    state = {\n        time: ''\n    }\n\n    componentDidMount() {\n        this.countSecond()\n    }\n\n    countSecond() {\n        setInterval(\n            () => this.updateTime(), 1000\n        )\n    }\n\n    updateTime() {\n        this.setState({\n            time: new Date().toLocaleTimeString()\n        })\n    }\n\n    sendDataToApp = () => {\n        this.props.parentCallback(this.state.time);\n    }\n\n    render() {\n        return (\n            <>\n                <h1>{this.state.time}</h1>\n                <FormattedDate dateAsProps={this.state.time}/>\n                <button onClick={this.sendDataToApp}>parentCallback(this.state.time)</button>\n            </>\n        )\n    }\n\n}\n\n\nexport default Clock","import React, {Component} from \"react\";\n\nclass LoginState extends Component {\n\n    state = {\n        username: \"\",\n        password: \"\"\n    }\n\n    handleChangeUsername = (event) => {\n        this.setState({username: event.target.value})\n    }\n\n    handleChangePassword = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('%c 1) Login (State)', 'background: green; color: white; display: block;');\n        console.log(`FORM SUBMITTED WITH: \n                     ${this.state.username} \n                     ${this.state.password}`)\n    }\n\n    render() {\n        console.log('%c 1) Login (State)', 'background: green; color: white; display: block;', this.state);\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <h1>Login (State)</h1>\n                <div>\n                    <div>\n                        <input onChange={this.handleChangeUsername} value={this.state.username}\n                               name=\"name\"\n                               type=\"text\"\n                               placeholder=\"username / email\"\n                        />\n                    </div>\n                    <div>\n                        <input onChange={this.handleChangePassword} value={this.state.password}\n                               name=\"password\"\n                               type=\"password\"\n                               placeholder=\"password\"\n                        />\n                    </div>\n                </div>\n\n                <button type=\"submit\">\n                    Login\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default LoginState\n","// https://www.digitalocean.com/community/tutorials/five-ways-to-convert-react-class-components-to-functional-components-with-react-hooks\nimport React, {useState} from \"react\";\n\nconst LoginStateHooks = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n\n    const handleChangeUsername = (event) => {\n        console.log('%c 2) Login (State + Hooks)', 'background: blue; color: white; display: block;')\n        console.log('hooks username event.target.value:', event.target.value);\n        setUsername(event.target.value)\n    }\n\n    const handleChangePassword = (event) => {\n        console.log('%c 2) Login (State + Hooks)', 'background: blue; color: white; display: block;')\n        console.log('hooks password event.target.value:', event.target.value);\n        setPassword(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log('%c 2) Login (State + Hooks)', 'background: blue; color: white; display: block;');\n        console.log(`FORM SUBMITTED WITH: \n                     ${username} \n                     ${password}`)\n    }\n\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h1>Login (Hooks)</h1>\n            <div>\n                <div>\n                    <input onChange={handleChangeUsername} value={username}\n                           name=\"name\"\n                           type=\"text\"\n                           placeholder=\"username / email\"\n                           required\n                    />\n                </div>\n                <div>\n                    <input onChange={handleChangePassword} value={password}\n                           name=\"password\"\n                           type=\"password\"\n                           placeholder=\"password\"\n                           required\n                    />\n                </div>\n            </div>\n\n            <button type=\"submit\">\n                Login\n            </button>\n        </form>\n    );\n\n}\n\nexport default LoginStateHooks\n","import React from \"react\";\n\nconst LoginPropsOne = (props) => (\n    <form onSubmit={props.handleSubmit}>\n        <h1>Login (Props #1)</h1>\n        <div>\n            <div>\n                <input onChange={(event) => props.setUsername(event.target.value)} value={props.username}\n                       name=\"name\"\n                       type=\"text\"\n                       placeholder=\"username / email\"\n                       required\n                />\n            </div>\n            <div>\n                <input onChange={(event) => props.setPassword(event.target.value)} value={props.password}\n                       name=\"password\"\n                       type=\"password\"\n                       placeholder=\"password\"\n                       required\n                />\n            </div>\n        </div>\n\n        <button type=\"submit\">\n            Login\n        </button>\n    </form>\n)\n\nexport default LoginPropsOne","import React from \"react\";\n\nconst LoginPropsTwo = (props) => {\n\n    const {username, password, onSubmit, setUsername, setPassword} = props;\n    console.log('%c 4) Login (Props)', 'background: orange; color: white; display: block;')\n    console.log('LoginPropsTwo PROPS: ', props);\n    console.log('LoginPropsTwo PROPS (username): ', username);\n    console.log('LoginPropsTwo PROPS (password): ', password);\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h1>Login (Props #2)</h1>\n            <div>\n                <div>\n                    <input onChange={(event) => setUsername(event.target.value)} value={username}\n                           name=\"name\"\n                           type=\"text\"\n                           placeholder=\"username / email\"\n                           required\n                    />\n                </div>\n                <div>\n                    <input onChange={(event) => setPassword(event.target.value)} value={password}\n                           name=\"password\"\n                           type=\"password\"lu\n                           placeholder=\"password\"\n                           required\n                    />\n                </div>\n            </div>\n\n            <button type=\"submit\">\n                Login\n            </button>\n        </form>\n    )\n}\n\nexport default LoginPropsTwo","import React from 'react'\nimport {Button, Form, Grid, Header, Image, Message, Segment} from 'semantic-ui-react'\nimport logo from '../../src/images/logo192.png'\n\nconst LoginLayout = () => (\n    <Grid textAlign='center' style={{height: 'calc(100vh - 10em)'}} verticalAlign='middle'>\n        <Grid.Column style={{maxWidth: 450}}>\n            <Header as='h2' color='blue' textAlign='center'>\n                <Image src={logo}/> Log-in to your account\n            </Header>\n            <Form size='large'>\n                <Segment raised>\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address'/>\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                    />\n\n                    <Button color='blue' fluid size='large'>\n                        Login\n                    </Button>\n                </Segment>\n            </Form>\n            <Message>\n                New to us? <a href='/'>Sign Up</a>\n            </Message>\n        </Grid.Column>\n    </Grid>\n)\n\nexport default LoginLayout\n","import React, {Component} from 'react';\nimport Clock from \"../components/Clock\";\nimport LoginState from \"../components/LoginState\";\nimport LoginStateHooks from \"../components/LoginStateHooks\";\nimport LoginPropsOne from \"../components/LoginPropsOne\";\nimport LoginPropsTwo from \"../components/LoginPropsTwo\";\nimport LoginLayout from \"../components/LoginLayout\";\n\nimport './App.css';\n\n\nclass App extends Component {\n\n    callbackFunction = (childData) => {\n        alert(`From parent App component, childData = ${childData}`)\n        this.setState({\n            dataStore: childData\n        })\n    }\n\n    render() {\n        console.log('%c 0) App (State)', 'background: gray; color: white; display: block;');\n        console.log('App (state):', this.state);\n        console.log('App (props):', this.props);\n\n        return (\n            <div className=\"App\">\n                <Clock parentCallback={this.callbackFunction}/>\n                <br/>\n                <br/>\n                <LoginState/>\n                <br/>\n                <br/>\n                <LoginStateHooks/>\n                <br/>\n                <br/>\n                <LoginPropsOne/>\n                <br/>\n                <br/>\n                <LoginPropsTwo/>\n                <br/>\n                <br/>\n                <LoginLayout/>\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}